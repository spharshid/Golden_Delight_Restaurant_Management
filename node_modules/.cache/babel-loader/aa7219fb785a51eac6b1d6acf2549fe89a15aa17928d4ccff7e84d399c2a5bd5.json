{"ast":null,"code":"import { toast } from 'react-toastify';\nimport api from './api';\n\n//getting All Table deta with get method\nexport const TableData = async () => {\n  try {\n    const response = await api.get(\"/api/tables\");\n    return response.data;\n  } catch (err) {\n    toast.error(\"Somthing Wrong!\");\n  }\n};\n\n//getting filtered data with get method\n_c = TableData;\nexport const TableFilterById = async id => {\n  try {\n    const response = await api.get(\"/api/tables/\" + id);\n    return response.data;\n  } catch (err) {\n    toast.error(\"Somthing Wrong!\");\n  }\n};\n\n//getting filtered data with get method\n_c2 = TableFilterById;\nexport const TableFilterByGuest = async guest => {\n  try {\n    const response = await api.get(\"/api/tables?status=Available\");\n    let Filter = response.data.filter(data => data.seating_capacity >= guest);\n    return Filter;\n  } catch (err) {\n    toast.error(\"Somthing Wrong!\");\n  }\n};\n\n//getting filtered data with get method\n_c3 = TableFilterByGuest;\nexport const TableFilterByStatus = async () => {\n  try {\n    const response = await api.get(\"/api/tables?status=Booked\");\n    return response.data;\n  } catch (err) {\n    toast.error(\"Somthing Wrong!\");\n  }\n};\n\n//update the table Data\n_c4 = TableFilterByStatus;\nexport const BookingUpdate = async ({\n  id,\n  data\n}) => {\n  try {\n    const response = await api.patch(\"/api/tables/\" + id, data, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (err) {\n    toast.error(\"Somthing Wrong!\");\n  }\n};\n_c5 = BookingUpdate;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TableData\");\n$RefreshReg$(_c2, \"TableFilterById\");\n$RefreshReg$(_c3, \"TableFilterByGuest\");\n$RefreshReg$(_c4, \"TableFilterByStatus\");\n$RefreshReg$(_c5, \"BookingUpdate\");","map":{"version":3,"names":["toast","api","TableData","response","get","data","err","error","_c","TableFilterById","id","_c2","TableFilterByGuest","guest","Filter","filter","seating_capacity","_c3","TableFilterByStatus","_c4","BookingUpdate","patch","headers","_c5","$RefreshReg$"],"sources":["C:/Users/Smile/Downloads/Restaurant-Management-System-master/Restaurant-Management-System-master/src/API/Table.js"],"sourcesContent":["import { toast } from 'react-toastify';\nimport api from './api'\n\n//getting All Table deta with get method\nexport const TableData=async()=>{\n    try{\n    const response=await api.get(\"/api/tables\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterById=async(id)=>\n{    try{\n    const response= await api.get(\"/api/tables/\"+id)\n    return response.data\n        }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByGuest=async(guest)=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Available\")\n    let Filter=response.data.filter(data=>data.seating_capacity >= guest)\n    return Filter\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//getting filtered data with get method\nexport const TableFilterByStatus=async()=>{\n    try{\n    const response=await api.get(\"/api/tables?status=Booked\")\n    return response.data\n    }\n    catch(err) {\n        toast.error(\"Somthing Wrong!\")\n        }\n}\n\n//update the table Data\nexport const BookingUpdate=async({id,data})=>{\n    try{\n    const response=await api.patch((\"/api/tables/\"+id),data,\n        {headers:{\n            'Accept':'application/json',\n            'Content-Type':'application/json'}})\n        return response.data\n    }\n    catch(err){\n        toast.error(\"Somthing Wrong!\")\n    }\n    \n} \n\n    "],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AACA,OAAO,MAAMC,SAAS,GAAC,MAAAA,CAAA,KAAS;EAC5B,IAAG;IACH,MAAMC,QAAQ,GAAC,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAa,CAAC;IAC3C,OAAOD,QAAQ,CAACE,IAAI;EACpB,CAAC,CACD,OAAMC,GAAG,EAAE;IACPN,KAAK,CAACO,KAAK,CAAC,iBAAiB,CAAC;EAC9B;AACR,CAAC;;AAED;AAAAC,EAAA,GAVaN,SAAS;AAWtB,OAAO,MAAMO,eAAe,GAAC,MAAMC,EAAE,IACrC;EAAK,IAAG;IACJ,MAAMP,QAAQ,GAAE,MAAMF,GAAG,CAACG,GAAG,CAAC,cAAc,GAACM,EAAE,CAAC;IAChD,OAAOP,QAAQ,CAACE,IAAI;EAChB,CAAC,CACL,OAAMC,GAAG,EAAE;IACPN,KAAK,CAACO,KAAK,CAAC,iBAAiB,CAAC;EAC9B;AACR,CAAC;;AAED;AAAAI,GAAA,GAVaF,eAAe;AAW5B,OAAO,MAAMG,kBAAkB,GAAC,MAAMC,KAAK,IAAG;EAC1C,IAAG;IACH,MAAMV,QAAQ,GAAC,MAAMF,GAAG,CAACG,GAAG,CAAC,8BAA8B,CAAC;IAC5D,IAAIU,MAAM,GAACX,QAAQ,CAACE,IAAI,CAACU,MAAM,CAACV,IAAI,IAAEA,IAAI,CAACW,gBAAgB,IAAIH,KAAK,CAAC;IACrE,OAAOC,MAAM;EACb,CAAC,CACD,OAAMR,GAAG,EAAE;IACPN,KAAK,CAACO,KAAK,CAAC,iBAAiB,CAAC;EAC9B;AACR,CAAC;;AAED;AAAAU,GAAA,GAXaL,kBAAkB;AAY/B,OAAO,MAAMM,mBAAmB,GAAC,MAAAA,CAAA,KAAS;EACtC,IAAG;IACH,MAAMf,QAAQ,GAAC,MAAMF,GAAG,CAACG,GAAG,CAAC,2BAA2B,CAAC;IACzD,OAAOD,QAAQ,CAACE,IAAI;EACpB,CAAC,CACD,OAAMC,GAAG,EAAE;IACPN,KAAK,CAACO,KAAK,CAAC,iBAAiB,CAAC;EAC9B;AACR,CAAC;;AAED;AAAAY,GAAA,GAVaD,mBAAmB;AAWhC,OAAO,MAAME,aAAa,GAAC,MAAAA,CAAM;EAACV,EAAE;EAACL;AAAI,CAAC,KAAG;EACzC,IAAG;IACH,MAAMF,QAAQ,GAAC,MAAMF,GAAG,CAACoB,KAAK,CAAE,cAAc,GAACX,EAAE,EAAEL,IAAI,EACnD;MAACiB,OAAO,EAAC;QACL,QAAQ,EAAC,kBAAkB;QAC3B,cAAc,EAAC;MAAkB;IAAC,CAAC,CAAC;IACxC,OAAOnB,QAAQ,CAACE,IAAI;EACxB,CAAC,CACD,OAAMC,GAAG,EAAC;IACNN,KAAK,CAACO,KAAK,CAAC,iBAAiB,CAAC;EAClC;AAEJ,CAAC;AAAAgB,GAAA,GAZYH,aAAa;AAAA,IAAAZ,EAAA,EAAAG,GAAA,EAAAM,GAAA,EAAAE,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}